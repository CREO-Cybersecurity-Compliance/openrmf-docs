version : '3'
 
services:
  mongo:
    image: mongo:4.0.5
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=myp2ssw0rd
      - MONGO_INITDB_DATABASE=openrmf
    volumes:
      - ./initializedbs.js:/docker-entrypoint-initdb.d/initialize.js:ro
    networks:
      - openrmf-local

  nats: 
    image: nats:2.1.2-linux
    command: -D -V -m 8222
    restart: always
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      - openrmf-local

  natspromexporter: 
    image: synadia/prometheus-nats-exporter:latest
    command: -DV -varz http://nats:8222
    restart: always
    ports:
      - 7777
    networks:
      - openrmf-local

  prometheus:
    image: prom/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - openrmf-local

  grafana: 
    image: grafana/grafana
    #command:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=1qaz2WSX3edc4RFVgr@fana
    restart: always
    ports:
      - 3000:3000
    networks:
      - openrmf-local

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5778:5778/tcp"
      - "6831:6831/udp"
      - "16686:16686"
      - "16687:16687" # Query Service and UI Metrics
      - "14271:14271" # Agent Metrics
    networks:
      - openrmf-local

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=myp2ssw0rd
    networks:
      - openrmf-local

### put all the networks here
networks:
  openrmf-local:
