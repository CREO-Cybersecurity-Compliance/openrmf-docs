version : '3.2'
 
services:
  web:
    image: nginx:1.18.0
    command: [nginx-debug, '-g', 'daemon off;']
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  mongo:
    image: mongo:4.0.5
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=myp2ssw0rd
      - MONGO_INITDB_DATABASE=openrmf
    volumes:
      - ./initializedbs.js:/docker-entrypoint-initdb.d/initialize.js:ro
    networks:
      - openrmf-local

  nats: 
    image: nats:2.1.2-linux
    container_name: nats
    command: -m 8222
    restart: always
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      - openrmf-local

  natspromexporter: 
    image: synadia/prometheus-nats-exporter:0.6.2
    container_name: nats-exporter-prometheus
    command: -varz -connz -subz http://nats:8222
    restart: always
    ports:
      - 7777:7777
    networks:
      - openrmf-local

  nats-client-metrics: 
    image: cingulara/nats-client-metrics:1.0.1
    container_name: nats-client-metrics
    restart: always
    ports:
      - 7778:7778
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:7778
      - NATSMETRICSURL=http://nats:8222
    networks:
      - openrmf-local

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - openrmf-local

  grafana: 
    image: grafana/grafana
    container_name: grafana
    #command:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=1qaz2WSX3edc4RFVgr@fana
    restart: always
    ports:
      - 3000:3000
    networks:
      - openrmf-local

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5778:5778/tcp"
      - "6831:6831/udp"
      - "16686:16686"
      - "16687:16687" # Query Service and UI Metrics
      - "14271:14271" # Agent Metrics
    networks:
      - openrmf-local

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - 9080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - openrmf-local
    labels:
      org.label-schema.group: "monitoring"

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=myp2ssw0rd
    networks:
      - openrmf-local

### put all the networks here
networks:
  openrmf-local:
