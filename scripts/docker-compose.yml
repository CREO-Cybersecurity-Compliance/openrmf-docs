version : '3.2'
 
services:
### 1 Web Front End Container
  openrmf-web:
    image: cingulara/openrmf-web:0.13.02
    container_name: openrmf-web
    ports:
      - 8080:80
    depends_on:
      - openrmfapi-scoring
      - openrmfapi-save
      - openrmfapi-template
      - openrmfapi-upload
      - openrmfapi-read
      - openrmfapi-compliance
    networks:
      - openrmf

### 8 API Containers
  openrmfapi-scoring:
    image: cingulara/openrmf-api-scoring:0.13.02
    container_name: openrmf-scoring-api
    ports:
      - 8090:8080
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - MONGODBCONNECTION=mongodb://openrmfscore:openrmf1234!@scoredb/openrmfscore?authSource=openrmfscore
      - MONGODB=openrmfscore
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfapi-scoring
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - scoredb
    networks:
      - openrmf
  
  openrmfapi-save:
    image: cingulara/openrmf-api-save:0.13.02
    container_name: openrmf-save-api
    ports:
      - 8082:8080
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - MONGODBCONNECTION=mongodb://openrmf:openrmf1234!@checklistdb/openrmf?authSource=openrmf
      - MONGODB=openrmf
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfapi-save
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - openrmfmsg-score
      - checklistdb
      - natsserver
    networks:
      - openrmf

  openrmfapi-template:
    image: cingulara/openrmf-api-template:0.14.01
    container_name: openrmf-template-api
    ports:
      - 8088:8080
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - NATSSERVERURL=nats://natsserver:4222
      - MONGODBCONNECTION=mongodb://openrmftemplate:openrmf1234!@templatedb/openrmftemplate?authSource=openrmftemplate
      - MONGODB=openrmftemplate
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfapi-template
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - templatedb
    networks:
      - openrmf

  openrmfapi-upload:
    image: cingulara/openrmf-api-upload:0.13.02
    container_name: openrmf-upload-api
    ports:
      - 8086:8080
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - MONGODBCONNECTION=mongodb://openrmf:openrmf1234!@checklistdb/openrmf?authSource=openrmf
      - MONGODB=openrmf
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfapi-upload
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - openrmfmsg-score
      - checklistdb
      - natsserver
    networks:
      - openrmf

  openrmfapi-read:
    image: cingulara/openrmf-api-read:0.13.02
    container_name: openrmf-read-api
    ports:
      - 8084:8080
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - MONGODBCONNECTION=mongodb://openrmf:openrmf1234!@checklistdb/openrmf?authSource=openrmf
      - MONGODB=openrmf
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfapi-read
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - checklistdb
    networks:
      - openrmf

  openrmfapi-compliance:
    image: cingulara/openrmf-api-compliance:0.14.01
    container_name: openrmf-compliance-api
    ports:
      - 8092:8080
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfapi-compliance
      - JAEGER_SAMPLER_TYPE=const
    networks:
      - openrmf

  openrmfapi-controls:
    image: cingulara/openrmf-api-controls:0.14.02
    container_name: openrmf-controls-api
    ports:
      - 8094:8080
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfapi-controls
      - JAEGER_SAMPLER_TYPE=const
    networks:
      - openrmf

  openrmfapi-audit:
    image: cingulara/openrmf-api-audit:0.13.02
    container_name: openrmf-audit-api
    ports:
      - 8096:8080
    env_file: .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:8080
      - MONGODBCONNECTION=mongodb://openrmfaudit:openrmf1234!@auditdb/openrmfaudit?authSource=openrmfaudit
      - MONGODB=openrmfaudit
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfapi-audit
      - JAEGER_SAMPLER_TYPE=const
    networks:
      - openrmf

### 7 Messaging Containers
  openrmfmsg-score:
    image: cingulara/openrmf-msg-score:0.13.01
    container_name: openrmf-score-nats-message-client
    environment:
      - MONGODBCONNECTION=mongodb://openrmfscore:openrmf1234!@scoredb/openrmfscore?authSource=openrmfscore
      - MONGODB=openrmfscore
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfmsg-score
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - scoredb
      - natsserver
    networks:
      - openrmf

  openrmfmsg-checklist:
    image: cingulara/openrmf-msg-checklist:0.13.01
    container_name: openrmf-checklist-nats-message-client
    environment:
      - MONGODBCONNECTION=mongodb://openrmf:openrmf1234!@checklistdb/openrmf?authSource=openrmf
      - MONGODB=openrmf
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfmsg-checklist
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - checklistdb
      - natsserver
    networks:
      - openrmf

  openrmfmsg-compliance:
    image: cingulara/openrmf-msg-compliance:0.13.01
    container_name: openrmf-compliance-nats-message-client
    environment:
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfmsg-compliance
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - natsserver
    networks:
      - openrmf

  openrmfmsg-controls:
    image: cingulara/openrmf-msg-controls:0.13.01
    container_name: openrmf-controls-nats-message-client
    environment:
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfmsg-controls
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - natsserver
    networks:
      - openrmf

  openrmfmsg-template:
    image: cingulara/openrmf-msg-template:0.13.01
    container_name: openrmf-template-nats-message-client
    environment:
      - MONGODBCONNECTION=mongodb://openrmftemplate:openrmf1234!@templatedb/openrmftemplate?authSource=openrmftemplate
      - MONGODB=openrmftemplate
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfmsg-template
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - templatedb
      - natsserver
    networks:
      - openrmf

  openrmfmsg-system:
    image: cingulara/openrmf-msg-system:0.13.01
    container_name: openrmf-system-nats-message-client
    environment:
      - MONGODBCONNECTION=mongodb://openrmf:openrmf1234!@checklistdb/openrmf?authSource=openrmf
      - MONGODB=openrmf
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfmsg-system
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - checklistdb
      - natsserver
    networks:
      - openrmf

  openrmfmsg-audit:
    image: cingulara/openrmf-msg-audit:0.13.01
    container_name: openrmf-audit-nats-message-client
    environment:
      - MONGODBCONNECTION=mongodb://openrmfaudit:openrmf1234!@auditdb/openrmfaudit?authSource=openrmfaudit
      - MONGODB=openrmfaudit
      - NATSSERVERURL=nats://natsserver:4222
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      - JAEGER_SERVICE_NAME=openrmfmsg-audit
      - JAEGER_SAMPLER_TYPE=const
    depends_on:
      - checklistdb
      - natsserver
    networks:
      - openrmf

### 4 MongoDB Containers
  checklistdb:
    image: mongo:4.0.5
    container_name: mongodb-checklist
    restart: always
    ports:
      - 27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=myp2ssw0rd
      - MONGO_INITDB_DATABASE=openrmf
    volumes:
      - checklist-data-volume:/data/db
      - ./initializeChecklist.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - openrmf

  scoredb:
    image: mongo:4.0.5
    container_name: mongodb-score
    restart: always
    ports:
      - 27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=myp2ssw0rd
      - MONGO_INITDB_DATABASE=openrmfscore
    volumes:
      - score-data-volume:/data/db
      - ./initializeScore.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - openrmf

  templatedb:
    image: mongo:4.0.5
    container_name: mongodb-template
    restart: always
    ports:
      - 27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=myp2ssw0rd
      - MONGO_INITDB_DATABASE=openrmftemplate
    volumes:
      - template-data-volume:/data/db
      - ./initializeTemplate.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - openrmf

  auditdb:
    image: mongo:4.0.5
    container_name: mongodb-audit
    restart: always
    ports:
      - 27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=myp2ssw0rd
      - MONGO_INITDB_DATABASE=openrmfaudit
    volumes:
      - audit-data-volume:/data/db
      - ./initializeAudit.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - openrmf

### NATS messaging container (internal)
  natsserver: 
    image: nats:2.1.2-linux
    container_name: nats
    command: -m 8222
    restart: always
    ports:
      - 4222
      - 6222
      - 8222
    networks:
      - openrmf

### Metrics
  natspromexporter: 
    image: synadia/prometheus-nats-exporter:0.6.2
    container_name: nats-prometheus-exporter
    command: -varz -connz -subz http://natsserver:8222
    restart: always
    ports:
      - 7777
    networks:
      - openrmf

  nats-client-metrics: 
    image: cingulara/nats-client-metrics:1.0.1
    container_name: nats-client-metrics
    restart: always
    ports:
      - 7778
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://*:7778
      - NATSMETRICSURL=http://natsserver:8222
    networks:
      - openrmf

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    restart: always
    ports:
      - 9090
    volumes:
      - openrmf-prometheus-data-volume:/prometheus # persist the data
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - openrmf

  grafana: 
    image: grafana/grafana
    container_name: grafana
    #command:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=1qaz2WSX3edc4RFVgr@fana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - openrmf-grafana-data-volume:/var/lib/grafana # persist the data
    networks:
      - openrmf

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5778:5778/tcp"
      - "6831:6831/udp"
      - "16686:16686" # Query Service and UI Metrics
      - "16687:16687" 
      - "14271:14271" # Agent Metrics
    networks:
      - openrmf

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - 9080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - openrmf
    labels:
      org.label-schema.group: "monitoring"

### put all the volume listings here for persistent data
volumes:
  template-data-volume:
  checklist-data-volume:
  score-data-volume:
  audit-data-volume:
  openrmf-prometheus-data-volume:
  openrmf-grafana-data-volume:

### put all the networks here
networks:
  openrmf:
