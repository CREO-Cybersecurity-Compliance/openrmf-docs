---
# Source: openrmf/templates/template.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openrmf-template
  namespace: openrmf
  labels:
    app: openrmf
    chart: openrmf-1.0.0
    component: template-api
    release: release-name
    revision: "0"
spec:
  selector:
    matchLabels:
      run: openrmf-template
  replicas: 1
  template:
    metadata:
      labels:
        run: openrmf-template
    spec:
      containers:
      - name: openrmf-template
        image: cingulara/openrmf-api-template:0.8
        ports:
        - name: web-port
          containerPort: 8080
        readinessProbe:
          tcpSocket:
            port: web-port
          initialDelaySeconds: 5
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /healthz
            port: web-port
          initialDelaySeconds: 3
          periodSeconds: 30
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Development
        - name: ASPNETCORE_URLS
          value: http://*:8080
        - name: MONGODBCONNECTION
          value: mongodb://openrmftemplate:openrmf1234!@openrmf-templatedb/openrmftemplate?authSource=openrmftemplate
        - name: MONGODB
          value: openrmftemplate
        - name: JWT-AUTHORITY
          value: https://keycloak.openrmf.io/auth/realms/openrmf
        - name: JWT-CLIENT
          value: openrmf
        resources:
          limits:
            memory: "750Mi"
            cpu: "500m"
          requests:
            memory: "250Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: openrmf-template
  namespace: openrmf
  annotations:
    # Note that the backend talks over HTTP.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    # TODO: Fill in with the ARN of your certificate.
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:144701936928:certificate/7ab33a42-370b-4bdb-a3ee-265de60b0946
    # Only run SSL on the port named "https" below.
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8080
  selector:
    run: openrmf-template
  sessionAffinity: None
  type: LoadBalancer