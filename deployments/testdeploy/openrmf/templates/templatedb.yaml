---
# Source: openrmf/templates/templatedb.yaml
apiVersion: v1
kind: Secret
metadata:
  name: templatedbsecret
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: template-mongodb-secret
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
type: Opaque
data:
  initUsername: root
  initPassword: myp2SSw0rd
  initDBNname: openrmftemplate
  appConnection: mongodb://openrmftemplate2:openrmf4321!@openrmf-templatedb/openrmftemplate?authSource=openrmftemplate
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: templatedb-initconfig
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: templatedb-init-config
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
data:
  mongo-init.js: |
    db.createUser({ user: "openrmftemplate2" , pwd: "openrmf4321!!", roles: [{ "role": "readWrite", "db": "openrmftemplate"}]});
    db.createCollection("Templates");
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openrmf-templatedb
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: template-mongodb
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
spec:
  selector:
    matchLabels:
      run: openrmf-templatedb
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        run: openrmf-templatedb
    spec:
      containers:
      - name: openrmf-templatedb
        image: mongo:4.0.5
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:  
            secretKeyRef:
              name: templatedbsecret
              key: initUsername
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:  
            secretKeyRef:
              name: templatedbsecret
              key: initPassword
        - name: MONGO_INITDB_DATABASE
          valueFrom:  
            secretKeyRef:
              name: templatedbsecret
              key: initDBNname
        resources:
          requests:
            memory: "500M"
            cpu: "200m"
        volumeMounts:
        - mountPath: /data/db
          name: mongodata-templatedb
      restartPolicy: Always
      volumes:
      - name: mongodata-templatedb
        persistentVolumeClaim:
          claimName: openrmf-templatedb-claim
      - name: initconfig-volume
        configMap:
          name: templatedb-initconfig
---
apiVersion: v1
kind: Service
metadata:
  name: openrmf-templatedb
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: template-mongodb
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
spec:
  ports:
  - name: mongodb-templatedb
    port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    run: openrmf-templatedb
  sessionAffinity: None
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: openrmfdev
  name: openrmf-templatedb-claim
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: template-mongodb
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
spec:
  storageClassName: standard
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi