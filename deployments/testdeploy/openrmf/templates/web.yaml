---
# Source: openrmf/templates/web.yaml
# put the apis.js into the proper area for the path to call within K8s
apiVersion: v1
kind: ConfigMap
metadata:
  name: openrmf-apiconfig
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: web-ui-ingress
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
data:
  apis.js: |
    var readAPI = 'http://openrmf.local/read'
    var scoreAPI = 'http://openrmf.local/scoring'
    var saveAPI = 'http://openrmf.local/save'
    var uploadAPI = 'http://openrmf.local/upload'
    var templateAPI = 'http://openrmf.local/template'
    var complianceAPI = 'http://openrmf.local/compliance'
    var controlAPI = 'http://openrmf.local/controls'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openrmf-authconfig
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: web-ui-ingress
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
data:
  auth.js: |
    var keycloak = Keycloak({ url: 'http://192.168.11.29:9001/auth', realm: 'openrmf', clientId: 'openrmf'});
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openrmf-web
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: web-ui-ingress
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
spec:
  selector:
    matchLabels:
      run: openrmf-web
  replicas: 1
  template:
    metadata:
      labels:
        run: openrmf-web
    spec:
      containers:
      - name: openrmf-web
        image: cingulara/openrmf-web:0.8.1
        volumeMounts:
        - name: apiconfig-volume
          mountPath: /usr/share/nginx/html/js/apis.js
          subPath: apis.js
        - name: authconfig-volume
          mountPath: /usr/share/nginx/html/js/auth.js
          subPath: auth.js
        ports:
        - name: web-port
          containerPort: 80
        resources:
          limits:
            memory: "400M"
            cpu: "500m"
          requests:
            memory: "150M"
            cpu: "100m"
        readinessProbe:
          tcpSocket:
            port: web-port
          initialDelaySeconds: 5
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /status.html
            port: web-port
          initialDelaySeconds: 3
          periodSeconds: 60
      volumes:
        - name: apiconfig-volume
          configMap:
            name: openrmf-apiconfig
        - name: authconfig-volume
          configMap:
            name: openrmf-authconfig


---
apiVersion: v1
kind: Service
metadata:
  name: openrmf-web
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: web-ui-service
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    run: openrmf-web
  sessionAffinity: None
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: openrmf-web-ingress
  namespace: openrmfdev
  labels:
    app.kubernetes.io/name: openrmf
    helm.sh/chart: openrmf-1.1.0
    app.kubernetes.io/component: web-ui-ingress
    app.kubernetes.io/instance: testnumber2
    app.kubernetes.io/revision: "0"
    app.kubernetes.io/version: 0.8.1
    app.kubernetes.io/managed-by: helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
spec:
  rules:
  - host: openrmf.local
    http:
      paths:
      - path: /web(/|$)(.*)
        backend:
          serviceName: openrmf-web
          servicePort: 8080


